{"version":3,"file":"fabric-extensions.min.js","sources":["../extensions/aligning_guidelines/constant.ts","../extensions/aligning_guidelines/util/basic.ts","../extensions/aligning_guidelines/util/collect-point.ts","../extensions/aligning_guidelines/util/draw.ts","../extensions/aligning_guidelines/util/get-objects-by-target.ts","../extensions/aligning_guidelines/util/collect-line.ts","../extensions/data_updaters/origins/index.ts","../extensions/data_updaters/gradient/index.ts","../extensions/aligning_guidelines/index.ts"],"sourcesContent":["import type { AligningLineConfig } from './typedefs';\n\nexport const aligningLineConfig: AligningLineConfig = {\n  /** At what distance from the shape does alignment begin? */\n  margin: 4,\n  /** Aligning line dimensions */\n  width: 1,\n  /** Aligning line color */\n  color: 'rgb(255,0,0,0.9)',\n};\n","import type { FabricObject, Point } from 'fabric';\n\nexport function getDistance(a: number, b: number) {\n  return Math.abs(a - b);\n}\n\nexport function setPositionDir(\n  target: FabricObject,\n  pos: Point,\n  dir: 'x' | 'y',\n) {\n  const center = target.translateToCenterPoint(pos, 'center', 'center');\n  const position = target.translateToOriginPoint(\n    center,\n    target.originX,\n    target.originY,\n  );\n  if (dir == 'x') target.setX(position.x);\n  else target.setY(position.y);\n}\n","import type { FabricObject, Point, TOriginX, TOriginY } from 'fabric';\nimport { aligningLineConfig } from '../constant';\nimport { getDistance } from './basic';\n\ntype CollectPointProps = {\n  activeObject: FabricObject;\n  point: Point;\n  list: Point[];\n  isScale: boolean;\n  index: number;\n};\nconst originXArr: TOriginX[] = ['left', 'center', 'right'];\nconst originYArr: TOriginY[] = ['top', 'center', 'bottom'];\n\nexport function collectVerticalPoint(props: CollectPointProps) {\n  const aligningLineMargin = aligningLineConfig.margin;\n  const { activeObject, isScale, index, point, list } = props;\n  const { dis, arr } = getDistanceList(point, list, 'x');\n  const margin = aligningLineMargin / (activeObject.canvas?.getZoom() ?? 1);\n  if (dis > margin) return [];\n  let v = arr[arr.length - 1].x - point.x;\n  const dir = index == 0 || index == 3 ? -1 : 1;\n  v *= dir;\n\n  const { width, scaleX, left } = activeObject;\n  const dim = activeObject._getTransformedDimensions();\n  const sx = (v + dim.x) / dim.x;\n  if (isScale) activeObject.set('scaleX', scaleX * sx);\n  else activeObject.set('width', width * sx);\n  const dArr = [0, (v / 2) * dir, v * dir];\n  if (dir < 0) dArr.reverse();\n  const d = dArr[originXArr.indexOf(activeObject.originX)];\n  activeObject.set('left', left + d);\n  activeObject.setCoords();\n  return arr.map((item) => ({\n    x: item.x,\n    y1: item.y,\n    y2: point.y,\n  }));\n}\n\nexport function collectHorizontalPoint(props: CollectPointProps) {\n  const aligningLineMargin = aligningLineConfig.margin;\n  const { activeObject, isScale, index, point, list } = props;\n  const { dis, arr } = getDistanceList(point, list, 'y');\n  const margin = aligningLineMargin / (activeObject.canvas?.getZoom() ?? 1);\n  if (dis > margin) return [];\n  let v = arr[arr.length - 1].y - point.y;\n  const dir = index < 2 ? -1 : 1;\n  v *= dir;\n\n  const { height, scaleY, top } = activeObject;\n  const dim = activeObject._getTransformedDimensions();\n  const sy = (v + dim.y) / dim.y;\n  if (isScale) activeObject.set('scaleY', scaleY * sy);\n  else activeObject.set('height', height * sy);\n  const dArr = [0, (v / 2) * dir, v * dir];\n  if (dir < 0) dArr.reverse();\n  const d = dArr[originYArr.indexOf(activeObject.originY)];\n  activeObject.set('top', top + d);\n  activeObject.setCoords();\n  return arr.map((item) => ({\n    y: item.y,\n    x1: item.x,\n    x2: point.x,\n  }));\n}\n\nfunction getDistanceList(point: Point, list: Point[], type: 'x' | 'y') {\n  let dis = Infinity;\n  let arr: Point[] = [];\n  for (const item of list) {\n    const v = getDistance(point[type], item[type]);\n    if (dis > v) {\n      arr = [];\n      dis = v;\n    }\n    if (dis == v) {\n      arr.push(item);\n    }\n  }\n  return { dis, arr };\n}\n","import type { Canvas } from 'fabric';\nimport { Point } from 'fabric';\nimport type { HorizontalLine, VerticalLine } from '../typedefs';\nimport { aligningLineConfig } from '../constant';\n\nfunction drawLine(canvas: Canvas, origin: Point, target: Point) {\n  const { width, color } = aligningLineConfig;\n  const ctx = canvas.getSelectionContext();\n  const viewportTransform = canvas.viewportTransform;\n  const zoom = canvas.getZoom();\n  ctx.save();\n  ctx.transform(...viewportTransform);\n  ctx.lineWidth = width / zoom;\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(origin.x, origin.y);\n  ctx.lineTo(target.x, target.y);\n  ctx.stroke();\n  drawX(ctx, zoom, origin);\n  drawX(ctx, zoom, target);\n  ctx.restore();\n}\n\nconst xSize = 2.4;\nfunction drawX(ctx: CanvasRenderingContext2D, zoom: number, point: Point) {\n  const size = xSize / zoom;\n  ctx.save();\n  ctx.translate(point.x, point.y);\n  ctx.beginPath();\n  ctx.moveTo(-size, -size);\n  ctx.lineTo(size, size);\n  ctx.moveTo(size, -size);\n  ctx.lineTo(-size, size);\n  ctx.stroke();\n  ctx.restore();\n}\nfunction drawPoint(canvas: Canvas, arr: Point[]) {\n  const { width, color } = aligningLineConfig;\n  const ctx = canvas.getSelectionContext();\n  const viewportTransform = canvas.viewportTransform;\n  const zoom = canvas.getZoom();\n  ctx.save();\n  ctx.transform(...viewportTransform);\n  ctx.lineWidth = width / zoom;\n  ctx.strokeStyle = color;\n  for (const item of arr) drawX(ctx, zoom, item);\n  ctx.restore();\n}\nexport function drawPointList(\n  canvas: Canvas,\n  list: Array<VerticalLine | HorizontalLine>,\n) {\n  const arr = list.map((item) => {\n    const isVertical = 'y2' in item;\n    const x = isVertical ? item.x : item.x1;\n    const y = isVertical ? item.y1 : item.y;\n    return new Point(x, y);\n  });\n  drawPoint(canvas, arr);\n}\n\nexport function drawVerticalLine(canvas: Canvas, coords: VerticalLine) {\n  const x = coords.x;\n  const origin = new Point(x, coords.y1);\n  const target = new Point(x, coords.y2);\n  drawLine(canvas, origin, target);\n}\n\nexport function drawHorizontalLine(canvas: Canvas, coords: HorizontalLine) {\n  const y = coords.y;\n  const origin = new Point(coords.x1, y);\n  const target = new Point(coords.x2, y);\n  drawLine(canvas, origin, target);\n}\n","import type { FabricObject } from 'fabric';\nimport { ActiveSelection, Frame, Group } from 'fabric';\n\nexport function getObjectsByTarget(target: FabricObject) {\n  const objects = new Set<FabricObject>();\n  const canvas = target.canvas;\n  const frameId = target.frameId;\n  if (!canvas) return objects;\n  const children =\n    target instanceof ActiveSelection ? target.getObjects() : [target];\n\n  // 画板内移动\n  if (frameId) {\n    canvas.forEachObject((o) => {\n      if (!o.isOnScreen()) return;\n      if (!o.visible) return;\n      if (o.frameId != frameId && o.id != frameId) return;\n      if (o.constructor == Group) {\n        collectObjectsByGroup(objects, o);\n        return;\n      }\n      objects.add(o);\n    });\n  } else {\n    canvas.forEachObject((o) => {\n      if (!o.isOnScreen()) return;\n      if (!o.visible) return;\n      if (o.constructor != Frame) return;\n      objects.add(o);\n    });\n  }\n\n  deleteObjectsByList(objects, children);\n  return objects;\n}\n\nfunction deleteObjectsByList(objects: Set<FabricObject>, list: FabricObject[]) {\n  for (const target of list) {\n    if (target.constructor == Group) {\n      deleteObjectsByList(objects, (target as Group).getObjects());\n    } else {\n      objects.delete(target);\n    }\n  }\n}\n\nfunction collectObjectsByGroup(objects: Set<FabricObject>, g: Group) {\n  const children = g.getObjects();\n  for (const child of children) {\n    if (!child.visible) continue;\n    if (child.constructor == Group) {\n      collectObjectsByGroup(objects, child);\n      continue;\n    }\n    objects.add(child);\n  }\n}\n","import type { FabricObject, TBBox } from 'fabric';\nimport { Point } from 'fabric';\nimport type { HorizontalLine, VerticalLine } from '../typedefs';\nimport { aligningLineConfig } from '../constant';\nimport { getDistance, setPositionDir } from './basic';\n\ntype CollectLineProps = {\n  activeObject: FabricObject;\n  activeObjectRect: TBBox;\n  objectRect: TBBox;\n};\n\nexport function collectLine(props: CollectLineProps) {\n  const aligningLineMargin = aligningLineConfig.margin;\n  const { activeObject, activeObjectRect, objectRect } = props;\n  const list = makeLineByRect(objectRect);\n  const aList = makeLineByRect(activeObjectRect);\n  const margin = aligningLineMargin / (activeObject.canvas?.getZoom() ?? 1);\n  const opts = { target: activeObject, list, aList, margin };\n  const vLines = collectVerticalLine(opts);\n  const hLines = collectHorizontalLine(opts);\n\n  return { vLines, hLines };\n}\n\ntype CollectItemLineProps = {\n  target: FabricObject;\n  list: LineProps[];\n  aList: LineProps[];\n  margin: number;\n};\nfunction collectVerticalLine(props: CollectItemLineProps) {\n  const { target, list, aList, margin } = props;\n\n  const arr = aList.map((x) => getDistanceLine(x, list, 'x'));\n  const min = Math.min(...arr.map((x) => x.dis));\n  if (min > margin) return [];\n  const lines: VerticalLine[] = [];\n  const width = aList[0].x2 - aList[0].x;\n  const height = aList[0].y2 - aList[0].y;\n  let b = false;\n  for (let i = 0; i < arr.length; i++) {\n    const item = arr[i];\n    if (min == item.dis) {\n      const line = list[item.index];\n      const aLine = aList[item.index];\n      const x = line.x;\n      const y = aLine.y;\n\n      const y1 = Math.min(line.y, line.y2, y, aLine.y2);\n      const y2 = Math.max(line.y, line.y2, y, aLine.y2);\n      // 参考线可画多条\n      lines.push({ x, y1, y2 });\n      if (b) continue;\n      b = true;\n      // 对齐只进行一次\n      setPos({\n        target,\n        x,\n        y,\n        centerX: i - 1,\n        centerY: item.index - 1,\n        width,\n        height,\n        dir: 'x',\n      });\n      const dis = min * item.dir;\n      aList.forEach((x) => (x.x -= dis));\n    }\n  }\n  return lines;\n}\n\nfunction collectHorizontalLine(props: CollectItemLineProps) {\n  const { target, list, aList, margin } = props;\n\n  const arr = aList.map((x) => getDistanceLine(x, list, 'y'));\n  const min = Math.min(...arr.map((x) => x.dis));\n  if (min > margin) return [];\n  const lines: HorizontalLine[] = [];\n  const width = aList[0].x2 - aList[0].x;\n  const height = aList[0].y2 - aList[0].y;\n  let b = false;\n  for (let i = 0; i < arr.length; i++) {\n    const item = arr[i];\n    if (min == item.dis) {\n      const line = list[item.index];\n      const aLine = aList[item.index];\n      const y = line.y;\n      const x = aLine.x;\n\n      const x1 = Math.min(line.x, line.x2, x, aLine.x2);\n      const x2 = Math.max(line.x, line.x2, x, aLine.x2);\n      // 参考线可画多条\n      lines.push({ y, x1, x2 });\n      if (b) continue;\n      b = true;\n      // 对齐只进行一次\n      setPos({\n        target,\n        x,\n        y,\n        centerX: item.index - 1,\n        centerY: i - 1,\n        width,\n        height,\n        dir: 'y',\n      });\n      const dis = min * item.dir;\n      aList.forEach((x) => (x.y -= dis));\n    }\n  }\n  return lines;\n}\n\ntype LineProps = {\n  x: number;\n  y: number;\n  x2: number;\n  y2: number;\n};\nfunction getDistanceLine(\n  target: LineProps,\n  list: LineProps[],\n  type: 'x' | 'y',\n) {\n  let dis = Infinity;\n  let index = -1;\n  /** 1正值 -1负值 */\n  let dir = 1;\n  for (let i = 0; i < list.length; i++) {\n    const v = getDistance(target[type], list[i][type]);\n    if (dis > v) {\n      index = i;\n      dis = v;\n      dir = target[type] > list[i][type] ? 1 : -1;\n    }\n  }\n  return { dis, index, dir };\n}\n\nfunction makeLineByRect(rect: TBBox) {\n  const { left, top, width, height } = rect;\n  const a = { x: left, y: top, x2: left + width, y2: top + height };\n  const x = left + width / 2;\n  const y = top + height / 2;\n  const b = { x, y, x2: x, y2: y };\n  const c = { x: left + width, x2: left, y: top + height, y2: top };\n\n  return [a, b, c];\n}\n\ntype SnapToPixelProps = {\n  target: FabricObject;\n  x: number;\n  y: number;\n  /** -1 0 1 */\n  centerX: number;\n  /** -1 0 1 */\n  centerY: number;\n  width: number;\n  height: number;\n  dir: 'x' | 'y';\n};\nfunction setPos(props: SnapToPixelProps) {\n  const { target, centerX, centerY, width, height, dir } = props;\n  let { x, y } = props;\n  x -= (centerX * width) / 2;\n  y -= (centerY * height) / 2;\n  setPositionDir(target, new Point(x, y), dir);\n  target.setCoords();\n}\n","import {\n  Point,\n  FabricImage,\n  Group,\n  BaseFabricObject,\n  type FabricObject,\n  type TOriginX,\n  type TOriginY,\n} from 'fabric';\n\n/**\n * Updates the fromObject function of a class to return a version that can restore old data\n * with values of originX and originY that are different from 'center', 'center'\n * Used to upgrade from fabric 6 to fabric 7\n * @param originalFn the original fromObject function of an object,\n * @param defaultOriginX optional default value for non exported originX,\n * @param defaultOriginY optional default value for non exported originY,\n * @returns a wrapped fromObject function for the object\n */\nexport const originUpdaterWrapper = <T extends FabricObject = FabricObject>(\n  originalFn: (...args: any[]) => Promise<T>,\n  defaultOriginX: TOriginX = 'left',\n  defaultOriginY: TOriginY = 'top',\n): ((...args: any[]) => Promise<T>) =>\n  async function (this: T, serializedObject, ...args) {\n    // we default to left and top because those are defaults before deprecation\n    const { originX = defaultOriginX, originY = defaultOriginY } =\n      serializedObject;\n    // and we do not want to pass those properties on the object anymore\n    delete serializedObject.originX;\n    delete serializedObject.originY;\n    const originalObject = await originalFn.call(\n      this,\n      serializedObject,\n      ...args,\n    );\n    const actualPosition = new Point(originalObject.left, originalObject.top);\n    originalObject.setPositionByOrigin(actualPosition, originX, originY);\n    return originalObject;\n  };\n\n/**\n * Wraps and override the current fabricJS fromObject static functions\n * Used to upgrade from fabric 7 to fabric 8\n * If you used to export with includeDefaultValues = false, you have to specify\n * which were yours default origins values\n * @param originX optional default value for non exported originX,\n * @param originY optional default value for non exported originY,\n */\nexport const installOriginWrapperUpdater = (\n  originX?: TOriginX,\n  originY?: TOriginY,\n) => {\n  // @ts-expect-error the _fromObject parameter could be instantiated differently\n  BaseFabricObject._fromObject = originUpdaterWrapper(\n    BaseFabricObject._fromObject,\n    originX,\n    originY,\n  );\n  // FabricImage and Group do not use _fromObject\n  FabricImage.fromObject = originUpdaterWrapper<FabricImage>(\n    FabricImage.fromObject,\n    originX,\n    originY,\n  );\n  Group.fromObject = originUpdaterWrapper<Group>(\n    Group.fromObject,\n    originX,\n    originY,\n  );\n};\n","import type { GradientOptions, ColorStop } from 'fabric';\nimport { Color, Gradient } from 'fabric';\n\n/**\n * Updates the fromObject function of a Gradient to return a version that can restore old data\n * with opactiy in color Stops\n * Used to upgrade from fabric 6 to fabric 7\n * @param originalFn the original fromObject function of an object,\n * @returns a wrapped fromObject function for the object\n */\n\ntype OldColorStop = ColorStop & {\n  opacity?: number;\n};\n\nexport const gradientUpdaterWrapper = <S, T extends Gradient<S> = Gradient<S>>(\n  originalFn: (\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) => Promise<T>,\n): ((\n  options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n) => Promise<T>) =>\n  async function (this: T, serializedGradient) {\n    // we default to left and top because those are defaults before deprecation\n    const { colorStops } = serializedGradient;\n    // and we do not want to pass those properties on the object anymore\n    const newColorStops: ColorStop[] = (\n      colorStops as OldColorStop[]\n    )?.map<ColorStop>(({ color, opacity, offset }) => {\n      if (opacity === undefined || opacity === 1) {\n        return {\n          color,\n          offset,\n        };\n      }\n      const col = new Color(color).setAlpha(opacity).toRgba();\n      return {\n        color: col,\n        offset,\n      };\n    });\n    const gradient = await originalFn.call(this, {\n      ...serializedGradient,\n      colorStops: newColorStops,\n    });\n    return gradient;\n  };\n\n/**\n * Wraps and override the current fabricJS fromObject static functions\n * Used to upgrade from fabric 7 to fabric 8\n * If you used to export with includeDefaultValues = false, you have to specify\n * which were yours default origins values\n */\nexport const installGradientUpdater = () => {\n  // @ts-expect-error untypable\n  Gradient.fromObject = gradientUpdaterWrapper(Gradient.fromObject);\n};\n","import type {\n  BasicTransformEvent,\n  Canvas,\n  FabricObject,\n  TBBox,\n  TPointerEvent,\n} from 'fabric';\nimport { Point, util } from 'fabric';\nimport {\n  collectHorizontalPoint,\n  collectVerticalPoint,\n} from './util/collect-point';\nimport {\n  drawHorizontalLine,\n  drawPointList,\n  drawVerticalLine,\n} from './util/draw';\nimport { getObjectsByTarget } from './util/get-objects-by-target';\nimport { collectLine } from './util/collect-line';\nimport type {\n  AligningLineConfig,\n  HorizontalLine,\n  VerticalLine,\n} from './typedefs';\nimport { aligningLineConfig } from './constant';\n\ntype TransformEvent = BasicTransformEvent<TPointerEvent> & {\n  target: FabricObject;\n};\n\nexport type { AligningLineConfig } from './typedefs';\n\nexport function initAligningGuidelines(\n  canvas: Canvas,\n  options: Partial<AligningLineConfig> = {},\n) {\n  Object.assign(aligningLineConfig, options);\n\n  const horizontalLines = new Set<string>();\n  const verticalLines = new Set<string>();\n  let onlyDrawPoint = false;\n  const cacheMap = new Map<string, [TBBox, Point[]]>();\n\n  const getCaCheMapValue = (object: FabricObject) => {\n    const cacheKey = [\n      object.calcTransformMatrix().toString(),\n      object.width,\n      object.height,\n    ].join();\n    const cacheValue = cacheMap.get(cacheKey);\n    if (cacheValue) return cacheValue;\n    const coords = object.getCoords();\n    const rect = util.makeBoundingBoxFromPoints(coords);\n    const value: [TBBox, Point[]] = [rect, coords];\n    cacheMap.set(cacheKey, value);\n    return value;\n  };\n\n  function moving(e: TransformEvent) {\n    const activeObject = e.target;\n    activeObject.setCoords();\n    onlyDrawPoint = false;\n    verticalLines.clear();\n    horizontalLines.clear();\n\n    const objects = getObjectsByTarget(activeObject);\n    const activeObjectRect = activeObject.getBoundingRect();\n\n    for (const object of objects) {\n      const objectRect = getCaCheMapValue(object)[0];\n      const { vLines, hLines } = collectLine({\n        activeObject,\n        activeObjectRect,\n        objectRect,\n      });\n      vLines.forEach((o) => {\n        verticalLines.add(JSON.stringify(o));\n      });\n      hLines.forEach((o) => {\n        horizontalLines.add(JSON.stringify(o));\n      });\n    }\n  }\n\n  function scalingOrResizing(e: TransformEvent) {\n    // br bl tr tl mb ml mt mr\n    const activeObject = e.target;\n    activeObject.setCoords();\n    const isScale = String(e.transform.action).startsWith('scale');\n    verticalLines.clear();\n    horizontalLines.clear();\n\n    const objects = getObjectsByTarget(activeObject);\n    let corner = e.transform.corner;\n    if (activeObject.flipX) corner = corner.replace('l', 'r').replace('r', 'l');\n    if (activeObject.flipY) corner = corner.replace('t', 'b').replace('b', 't');\n    let index = ['tl', 'tr', 'br', 'bl', 'mt', 'mr', 'mb', 'ml'].indexOf(\n      corner,\n    );\n    if (index == -1) return;\n    onlyDrawPoint = index > 3;\n    if (onlyDrawPoint) {\n      const angle = activeObject.getTotalAngle();\n      if (angle % 90 != 0) return;\n      index -= 4;\n    }\n    let point = activeObject.getCoords()[index];\n    for (const object of objects) {\n      const [rect, coords] = getCaCheMapValue(object);\n      const center = new Point(\n        rect.left + rect.width / 2,\n        rect.top + rect.height / 2,\n      );\n      const list = [...coords, center];\n      const props = { activeObject, point, list, isScale, index };\n      const vLines = collectVerticalPoint(props);\n      const hLines = collectHorizontalPoint(props);\n      vLines.forEach((o) => {\n        verticalLines.add(JSON.stringify(o));\n      });\n      hLines.forEach((o) => {\n        horizontalLines.add(JSON.stringify(o));\n      });\n      if (vLines.length || hLines.length)\n        point = activeObject.getCoords()[index];\n    }\n  }\n\n  function beforeRender() {\n    canvas.clearContext(canvas.contextTop);\n  }\n  function afterRender() {\n    if (onlyDrawPoint) {\n      const list: Array<VerticalLine | HorizontalLine> = [];\n      for (const v of verticalLines) list.push(JSON.parse(v));\n      for (const h of horizontalLines) list.push(JSON.parse(h));\n      drawPointList(canvas, list);\n    } else {\n      for (const v of verticalLines) drawVerticalLine(canvas, JSON.parse(v));\n      for (const h of horizontalLines)\n        drawHorizontalLine(canvas, JSON.parse(h));\n    }\n  }\n  function mouseUp() {\n    verticalLines.clear();\n    horizontalLines.clear();\n    cacheMap.clear();\n    canvas.requestRenderAll();\n  }\n\n  canvas.on('object:resizing', scalingOrResizing);\n  canvas.on('object:scaling', scalingOrResizing);\n  canvas.on('object:moving', moving);\n  canvas.on('before:render', beforeRender);\n  canvas.on('after:render', afterRender);\n  canvas.on('mouse:up', mouseUp);\n\n  return () => {\n    canvas.off('object:resizing', scalingOrResizing);\n    canvas.off('object:scaling', scalingOrResizing);\n    canvas.off('object:moving', moving);\n    canvas.off('before:render', beforeRender);\n    canvas.off('after:render', afterRender);\n    canvas.off('mouse:up', mouseUp);\n  };\n}\n"],"names":["aligningLineConfig","margin","width","color","getDistance","a","b","Math","abs","originXArr","originYArr","collectVerticalPoint","props","_activeObject$canvas$","_activeObject$canvas","aligningLineMargin","activeObject","isScale","index","point","list","dis","arr","getDistanceList","canvas","getZoom","v","length","x","dir","scaleX","left","dim","_getTransformedDimensions","sx","set","dArr","reverse","d","indexOf","originX","setCoords","map","item","y1","y","y2","collectHorizontalPoint","_activeObject$canvas$2","_activeObject$canvas2","height","scaleY","top","sy","originY","x1","x2","type","Infinity","push","drawLine","origin","target","ctx","getSelectionContext","viewportTransform","zoom","save","transform","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","drawX","restore","xSize","size","translate","drawPointList","drawPoint","isVertical","Point","drawVerticalLine","coords","drawHorizontalLine","getObjectsByTarget","objects","Set","frameId","children","ActiveSelection","getObjects","forEachObject","o","isOnScreen","visible","id","constructor","Group","add","collectObjectsByGroup","Frame","deleteObjectsByList","delete","g","child","collectLine","activeObjectRect","objectRect","opts","makeLineByRect","aList","vLines","getDistanceLine","min","lines","i","line","aLine","max","setPos","centerX","centerY","forEach","collectVerticalLine","hLines","collectHorizontalLine","rect","pos","center","translateToCenterPoint","position","translateToOriginPoint","setX","setY","setPositionDir","originUpdaterWrapper","originalFn","defaultOriginX","arguments","undefined","defaultOriginY","async","serializedObject","_len","args","Array","_key","originalObject","call","this","actualPosition","setPositionByOrigin","serializedGradient","colorStops","newColorStops","_ref","opacity","offset","Color","setAlpha","toRgba","options","Object","assign","horizontalLines","verticalLines","onlyDrawPoint","cacheMap","Map","getCaCheMapValue","object","cacheKey","calcTransformMatrix","toString","join","cacheValue","get","getCoords","value","util","makeBoundingBoxFromPoints","moving","e","clear","getBoundingRect","JSON","stringify","scalingOrResizing","String","action","startsWith","corner","flipX","replace","flipY","getTotalAngle","beforeRender","clearContext","contextTop","afterRender","parse","h","mouseUp","requestRenderAll","on","off","installOriginWrapperUpdater","BaseFabricObject","_fromObject","FabricImage","fromObject"],"mappings":"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"}